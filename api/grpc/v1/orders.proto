// protoc --go_out=. --go-grpc_out=. api/grpc/v1/orders.proto
syntax = "proto3";

package proto.v1;

option go_package = "pkg/grpc/v1/orders_api";

// import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


message OrderGetAllRequest {
    int32 userId = 1;
    string role = 2;
}

message OrderGetByIdRequest {
    int32 id = 1;
    int32 userId = 2;
    string role = 3;
}

message OrderDeleteRequest {
    int32 id = 1;
    int32 userId = 2;
}

message GetOrderResponse {
    Order order = 1;
}

message Order {
    int32 id = 1;
    int32 number = 2;
	int32 totalCost = 3;
	google.protobuf.Timestamp createdDate = 4;
	google.protobuf.Timestamp lastModifiedDate = 5;
	OrderStatus status = 6;
	repeated Product products = 7;
}

message OrderCreateRequest {
    repeated OrderProduct products = 1;
    int32 userId = 2;
}

message OrderEditRequest {
    int32 id = 1;
    repeated OrderProduct products = 2;
    int32 userId = 3;
}

message OrderStatus {
	string Key = 1;
	string DisplayName = 2;
}

message OrderProduct {
    int32 productId = 1;
    int32 quantity = 2;
    int32 salePrice = 3;
}

message Product {
    int32 id = 1;
    int32 code = 2;
    int32 quantity = 3;
    string name = 4;
    int32 purchasePrice = 5;
    int32 salePrice = 6;
}

message GetOrdersResponse{
    repeated Order orders = 1;
}

message Success {
    string status = 1;
    string message = 2;
}

service OrderService {
    rpc GetOrders (OrderGetAllRequest) returns (GetOrdersResponse);
    rpc GetOrder (OrderGetByIdRequest) returns (GetOrderResponse);
    rpc CreateOrder (OrderCreateRequest) returns (Order);
    rpc EditOrder (OrderEditRequest) returns (Order);
    rpc DeleteOrder (OrderDeleteRequest) returns (Success);
}
